// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('nopCommerce', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').usingServer('http://localhost:4444/wd/hub').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Validacion de Visibilidad Logo', async function() {
    // Test name: Validacion de Visibilidad Logo
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.nopcommerce.com/")
    // 2 | assertElementPresent | css=.desktop-logo > img | Logotipo
    {
      const elements = await driver.findElements(By.css(".desktop-logo > img"))
      assert(elements.length)
    }
  })
  it('Validacion de Registro', async function() {
    // Test name: Validacion de Registro
    // Step # | name | target | value
    // 1 | open | /en | 
    await driver.get("https://www.nopcommerce.com/en")
    // 2 | setWindowSize | 986x635 | 
    await driver.manage().window().setRect({ width: 986, height: 635 })
    // 3 | click | xpath=//html[@id='en-page']/body/div[7]/header/nav/ul/li[3]/ul/li[2]/a/span | 
    await driver.findElement(By.xpath("//html[@id=\'en-page\']/body/div[7]/header/nav/ul/li[3]/ul/li[2]/a/span")).click()
    // 4 | click | id=FirstName | 
    await driver.findElement(By.id("FirstName")).click()
    // 5 | type | id=FirstName | Victor
    await driver.findElement(By.id("FirstName")).sendKeys("Victor")
    // 6 | click | id=LastName | 
    await driver.findElement(By.id("LastName")).click()
    // 7 | type | id=LastName | Acosta
    await driver.findElement(By.id("LastName")).sendKeys("Acosta")
    // 8 | click | id=Email | 
    await driver.findElement(By.id("Email")).click()
    // 9 | type | id=Email | victor-manuel@hotmail.com
    await driver.findElement(By.id("Email")).sendKeys("victor-manuel@hotmail.com")
    // 10 | click | id=ConfirmEmail | 
    await driver.findElement(By.id("ConfirmEmail")).click()
    // 11 | type | id=ConfirmEmail | victor-manuel@hotmail.com
    await driver.findElement(By.id("ConfirmEmail")).sendKeys("victor-manuel@hotmail.com")
    // 12 | click | id=Username | 
    await driver.findElement(By.id("Username")).click()
    // 13 | type | id=Username | vitolotech22
    await driver.findElement(By.id("Username")).sendKeys("vitolotech22")
    // 14 | click | id=CountryId | 
    await driver.findElement(By.id("CountryId")).click()
    // 15 | select | id=CountryId | label=American Samoa
    {
      const dropdown = await driver.findElement(By.id("CountryId"))
      await dropdown.findElement(By.xpath("//option[. = 'American Samoa']")).click()
    }
    // 16 | click | css=#CountryId > option:nth-child(6) | 
    await driver.findElement(By.css("#CountryId > option:nth-child(6)")).click()
    // 17 | click | id=Password | 
    await driver.findElement(By.id("Password")).click()
    // 18 | type | id=Password | otilon@m2112
    await driver.findElement(By.id("Password")).sendKeys("otilon@m2112")
    // 19 | click | id=ConfirmPassword | 
    await driver.findElement(By.id("ConfirmPassword")).click()
    // 20 | type | id=ConfirmPassword | otilon@m2112
    await driver.findElement(By.id("ConfirmPassword")).sendKeys("otilon@m2112")
    // 21 | click | id=Details_CompanyIndustryId | 
    await driver.findElement(By.id("Details_CompanyIndustryId")).click()
    // 22 | select | id=Details_CompanyIndustryId | label=I am student
    {
      const dropdown = await driver.findElement(By.id("Details_CompanyIndustryId"))
      await dropdown.findElement(By.xpath("//option[. = 'I am student']")).click()
    }
    // 23 | click | css=#Details_CompanyIndustryId > option:nth-child(5) | 
    await driver.findElement(By.css("#Details_CompanyIndustryId > option:nth-child(5)")).click()
    // 24 | click | id=register-button | 
    await driver.findElement(By.id("register-button")).click()
    // 25 | click | css=.navigation | 
    await driver.findElement(By.css(".navigation")).click()
  })
  it('Validacion de visivilidad de Get Started', async function() {
    // Test name: Validacion de visivilidad de Get Started
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.nopcommerce.com/")
    // 2 | assertText | css=.navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label | GET STARTED
    assert(await driver.findElement(By.css(".navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label")).getText() == "GET STARTED")
  })
  it('Validacion de visibilidad de Support & Service', async function() {
    // Test name: Validacion de visibilidad de Support & Service
    // Step # | name | target | value
    // 1 | open | / | SUPPORT & SERVICE
    await driver.get("https://www.nopcommerce.com/")
    // 2 | assertText | css=.navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label | PRODUCT
    assert(await driver.findElement(By.css(".navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label")).getText() == "PRODUCT")
  })
  it('Validacion de visilidad de Partner', async function() {
    // Test name: Validacion de visilidad de Partner
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.nopcommerce.com/")
    // 2 | assertText | css=.navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label | PARTNER
    assert(await driver.findElement(By.css(".navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label")).getText() == "PARTNER")
  })
  it('Validacion de visibilidad de Idiomas', async function() {
    // Test name: Validacion de visibilidad de Idiomas
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.nopcommerce.com/")
    // 2 | assertText | css=.navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label | IDIOMA
    assert(await driver.findElement(By.css(".navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label")).getText() == "IDIOMA")
  })
  it('Validacion de visibilidad de Download ', async function() {
    // Test name: Validacion de visibilidad de Download 
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.nopcommerce.com/")
    // 2 | assertText | css=.navigation-top-menu-item:nth-child(2) > .navigation-top-menu-label | DOWNLOADS
    assert(await driver.findElement(By.css(".navigation-top-menu-item:nth-child(2) > .navigation-top-menu-label")).getText() == "DOWNLOADS")
  })
  it('Validacion de inicio de sesion', async function() {
    // Test name: Validacion de inicio de sesion
    // Step # | name | target | value
    // 1 | open | /en | 
    await driver.get("https://www.nopcommerce.com/en")
    // 2 | setWindowSize | 1936x1168 | 
    await driver.manage().window().setRect({ width: 1936, height: 1168 })
    // 3 | click | xpath=//span[contains(.,'Log in')] | 
    await driver.findElement(By.xpath("//span[contains(.,\'Log in\')]")).click()
    // 4 | click | id=Username | 
    await driver.findElement(By.id("Username")).click()
    // 5 | type | id=Username | vitolotech
    await driver.findElement(By.id("Username")).sendKeys("vitolotech")
    // 6 | click | id=Password | 
    await driver.findElement(By.id("Password")).click()
    // 7 | type | id=Password | M@nolito2112
    await driver.findElement(By.id("Password")).sendKeys("M@nolito2112")
    // 8 | click | css=.buttons:nth-child(5) > .btn | 
    await driver.findElement(By.css(".buttons:nth-child(5) > .btn")).click()
  })
  it('Validacion de inicio de sesion sin contraseña', async function() {
    // Test name: Validacion de inicio de sesion sin contraseña
    // Step # | name | target | value
    // 1 | open | /en | 
    await driver.get("https://www.nopcommerce.com/en")
    // 2 | setWindowSize | 986x635 | 
    await driver.manage().window().setRect({ width: 986, height: 635 })
    // 3 | mouseOver | css=.user-actions-ico path | 
    {
      const element = await driver.findElement(By.css(".user-actions-ico path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 4 | waitForElementVisible | css=.navigation-top-menu-user-actions .navigation-top-menu-sublist | 3000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".navigation-top-menu-user-actions .navigation-top-menu-sublist"))), 3000)
    // 5 | click | xpath=//html[@id='en-page']/body/div[7]/header/nav/ul/li[3]/ul/li/a/span | 
    await driver.findElement(By.xpath("//html[@id=\'en-page\']/body/div[7]/header/nav/ul/li[3]/ul/li/a/span")).click()
    // 6 | click | id=Username | 
    await driver.findElement(By.id("Username")).click()
    // 7 | type | id=Username | vitolotech21
    await driver.findElement(By.id("Username")).sendKeys("vitolotech21")
    // 8 | click | css=.buttons:nth-child(5) > .btn | 
    await driver.findElement(By.css(".buttons:nth-child(5) > .btn")).click()
  })
  it('Validacion de Visibilidad de Producto', async function() {
    // Test name: Validacion de Visibilidad de Producto
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.nopcommerce.com/")
    // 2 | assertText | css=.navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label | PRODUCT
    assert(await driver.findElement(By.css(".navigation-top-menu-main > .navigation-top-menu-item:nth-child(1) > .navigation-top-menu-label")).getText() == "PRODUCT")
  })
})
