// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Puebas Swag Labs', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').usingServer('http://localhost:4444/wd/hub').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Validacion Añadir artilucos al carro de compra', async function() {
    // Test name: Validacion Añadir artilucos al carro de compra
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.saucedemo.com/")
    // 2 | setWindowSize | 987x635 | 
    await driver.manage().window().setRect({ width: 987, height: 635 })
    // 3 | click | css=*[data-test="username"] | 
    await driver.findElement(By.css("*[data-test=\"username\"]")).click()
    // 4 | type | css=*[data-test="username"] | standard_user
    await driver.findElement(By.css("*[data-test=\"username\"]")).sendKeys("standard_user")
    // 5 | click | css=*[data-test="password"] | 
    await driver.findElement(By.css("*[data-test=\"password\"]")).click()
    // 6 | type | css=*[data-test="password"] | secret_sauce
    await driver.findElement(By.css("*[data-test=\"password\"]")).sendKeys("secret_sauce")
    // 7 | click | css=*[data-test="login-button"] | 
    await driver.findElement(By.css("*[data-test=\"login-button\"]")).click()
    // 8 | assertText | css=*[data-test="inventory-item-name"] | Sauce Labs Backpack
    assert(await driver.findElement(By.css("*[data-test=\"inventory-item-name\"]")).getText() == "Sauce Labs Backpack")
    // 9 | assertText | //button[contains(.,'Add to cart')] | Add to cart
    assert(await driver.findElement(By.xpath("//button[contains(.,\'Add to cart\')]")).getText() == "Add to cart")
    // 10 | click | //button[contains(.,'Add to cart')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Add to cart\')]")).click()
    // 11 | assertText | css=*[data-test="remove-sauce-labs-backpack"] | Remove
    assert(await driver.findElement(By.css("*[data-test=\"remove-sauce-labs-backpack\"]")).getText() == "Remove")
    // 12 | click | css=*[data-test="remove-sauce-labs-backpack"] | 
    await driver.findElement(By.css("*[data-test=\"remove-sauce-labs-backpack\"]")).click()
    // 13 | click | css=*[data-test="add-to-cart-sauce-labs-backpack"] | 
    await driver.findElement(By.css("*[data-test=\"add-to-cart-sauce-labs-backpack\"]")).click()
    // 14 | click | css=*[data-test="shopping-cart-link"] | 
    await driver.findElement(By.css("*[data-test=\"shopping-cart-link\"]")).click()
    // 15 | assertText | css=*[data-test="cart-desc-label"] | Description
    assert(await driver.findElement(By.css("*[data-test=\"cart-desc-label\"]")).getText() == "Description")
    // 16 | assertText | css=.cart_quantity_label | QTY
    assert(await driver.findElement(By.css(".cart_quantity_label")).getText() == "QTY")
    // 17 | assertText | css=*[data-test="title"] | Your Cart
    assert(await driver.findElement(By.css("*[data-test=\"title\"]")).getText() == "Your Cart")
  })
  it('Validacion de Titulo', async function() {
    // Test name: Validacion de Titulo
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.saucedemo.com/")
    // 2 | setWindowSize | 1600x1024 | 
    await driver.manage().window().setRect({ width: 1600, height: 1024 })
    // 3 | assertText | css=.login_logo | Swag Labs
    assert(await driver.findElement(By.css(".login_logo")).getText() == "Swag Labs")
    // 4 | close |  | 
    await driver.close()
  })
  it('Validacion de Visibilidad Login', async function() {
    // Test name: Validacion de Visibilidad Login
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.saucedemo.com/")
    // 2 | setWindowSize | 987x635 | 
    await driver.manage().window().setRect({ width: 987, height: 635 })
    // 3 | assertElementPresent | css=*[data-test="login-button"] | Login
    {
      const elements = await driver.findElements(By.css("*[data-test=\"login-button\"]"))
      assert(elements.length)
    }
  })
  it('Validacion de Visibilidad Username & password', async function() {
    // Test name: Validacion de Visibilidad Username & password
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.saucedemo.com/")
    // 2 | setWindowSize | 987x635 | 
    await driver.manage().window().setRect({ width: 987, height: 635 })
    // 3 | assertElementPresent | css=*[data-test="username"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"username\"]"))
      assert(elements.length)
    }
    // 4 | assertElementPresent | css=*[data-test="password"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"password\"]"))
      assert(elements.length)
    }
  })
  it('Validacion de Login sin Usename', async function() {
    // Test name: Validacion de Login sin Usename
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.saucedemo.com/")
    // 2 | setWindowSize | 987x635 | 
    await driver.manage().window().setRect({ width: 987, height: 635 })
    // 3 | click | css=*[data-test="password"] | 
    await driver.findElement(By.css("*[data-test=\"password\"]")).click()
    // 4 | type | css=*[data-test="password"] | secret_sauce
    await driver.findElement(By.css("*[data-test=\"password\"]")).sendKeys("secret_sauce")
    // 5 | click | css=*[data-test="login-button"] | 
    await driver.findElement(By.css("*[data-test=\"login-button\"]")).click()
    // 6 | assertElementPresent | css=*[data-test="password"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"password\"]"))
      assert(elements.length)
    }
    // 7 | mouseOut | css=*[data-test="login-button"] | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 8 | assertText | css=*[data-test="error"] | Epic sadface: Username is required
    assert(await driver.findElement(By.css("*[data-test=\"error\"]")).getText() == "Epic sadface: Username is required")
  })
  it('Validacion de Inicio de sesion', async function() {
    // Test name: Validacion de Inicio de sesion
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("https://www.saucedemo.com/")
    // 2 | setWindowSize | 987x635 | 
    await driver.manage().window().setRect({ width: 987, height: 635 })
    // 3 | click | css=*[data-test="username"] | 
    await driver.findElement(By.css("*[data-test=\"username\"]")).click()
    // 4 | type | css=*[data-test="username"] | standard_user
    await driver.findElement(By.css("*[data-test=\"username\"]")).sendKeys("standard_user")
    // 5 | click | css=*[data-test="password"] | 
    await driver.findElement(By.css("*[data-test=\"password\"]")).click()
    // 6 | type | css=*[data-test="password"] | secret_sauce
    await driver.findElement(By.css("*[data-test=\"password\"]")).sendKeys("secret_sauce")
    // 7 | click | css=*[data-test="login-button"] | 
    await driver.findElement(By.css("*[data-test=\"login-button\"]")).click()
  })
})
